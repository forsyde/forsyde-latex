%% forsyde-tikz.sty
%% Copyright 2016-2018 George Ungureanu
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this work is George Ungureanu.
%
% This work consists of the files listed in LICENSE.

% A library with graphical primitives for ForSyDe process networks
%
% Author: George Ungureanu, KTH - Royal Institute of Technology, Sweden
% Version: 0.3
% Date: 2015/05/20
\NeedsTeXFormat{LaTeX2e}
\RequirePackage{pgfplots}
\RequirePackage{pgfkeys}
\RequirePackage{xparse,l3regex}
\RequirePackage{calc}
\RequirePackage{ezkeys}
\RequirePackage{xstring}
\usetikzlibrary{decorations.markings, decorations.text, shapes, positioning, calc, fit, backgrounds, intersections, arrows, through}

\ProvidesPackage{forsyde-tikz}
              [2018/03/01 v0.4.1 ForSyDe TikZ Library]

\usetikzlibrary{forsyde.shapes,forsyde.paths,forsyde.nodes}
\pgfplotsset{compat=1.13}

%%%%%%%%%%%%%
% CONSTANTS %
%%%%%%%%%%%%%
% Colors
\newcommand{\defaultdrawcolor}{black}     		% draw color of signal paths
\newcommand{\defaultfillcolor}{white}     		% draw color of signal paths
\definecolor{sycolor}{RGB}{148,183,215}
\definecolor{ctcolor}{RGB}{225,119,19}
\definecolor{decolor}{RGB}{80,229,154}
\definecolor{sdfcolor}{RGB}{220,220,20}
\definecolor{blackboxcolor}{gray}{0.80}
% line widths of
\newlength{\sepq}\pgfmathsetlength{\sepq}{2pt}
\newcommand{\compositelinewidth}{.4pt}       % composite process line width
\newcommand{\skeletonlinewidth}{1pt}         % parallel processes line width
\newcommand{\signalpathlinewidth}{1pt}       % signal paths
\newcommand{\functionpathlinewidth}{.5pt}    % function paths
\newcommand{\vectorpathlinewidth}{3pt}       % vector paths
% sizes, etc.
\newcommand{\tokensize}{2pt}
\newcommand{\halftokensize}{1pt}

%%%%%%%%%%%%%%%%%%%%%%%%
% GENERIC TIKZ HELPERS %
%%%%%%%%%%%%%%%%%%%%%%%%
% Positioning of node text.
% #1 = node label
% #2 = label text
\newcommand{\textaboveof}[2]{\pgftext[bottom,at=\pgfpointanchor{#1}{north},y=+1mm]{#2}}%
\newcommand{\textrightof}[2]{\pgftext[left,  at=\pgfpointanchor{#1}{east}, x=+1mm]{#2}}%
\newcommand{\textbelowof}[2]{\pgftext[top,   at=\pgfpointanchor{#1}{south},y=-1mm]{#2}}%
\newcommand{\textleftof} [2]{\pgftext[right, at=\pgfpointanchor{#1}{west}, x=-1mm]{#2}}%


% Conditional if node was defined.
% #1 = node label
% #2 = true-statement
% #3 = false-statement
\long\def\ifnodedefined#1#2#3{%
    \@ifundefined{pgf@sh@ns@#1}{#3}{#2}%
}

\newcommand{\gettikzx}[2]{%
  \tikz@scan@one@point\pgfutil@firstofone#1\relax
  \edef#2{\the\pgf@x}%
}
% Get y-coordinate of node
\newcommand{\gettikzy}[2]{%
  \tikz@scan@one@point\pgfutil@firstofone#1\relax
  \edef#2{\the\pgf@y}%
}
% Get x- and y- coordinate of node
\newcommand{\gettikzxy}[3]{%
  \tikz@scan@one@point\pgfutil@firstofone#1\relax
  \edef#2{\the\pgf@x}%
  \edef#3{\the\pgf@y}%
}

% Decorate process ports with info
% #1 = node label
\newcounter{iportnum}
\newcounter{oportnum}
\newcommand\resetportinfo[1]{%
  \setcounter{iportnum}{0}
  \setcounter{oportnum}{0}
  \def\currentnode{#1}
}
\newcommand\wpinfo[2][south east]{%
  \addtocounter{iportnum}{1}
  \node[anchor=#1] at (\currentnode.w\theiportnum) {\tiny #2};
}
\newcommand\epinfo[2][south west]{%
  \addtocounter{oportnum}{1}
  \node[anchor=#1] at (\currentnode.e\theoportnum) {\tiny #2};
}


\tikzset{% 
    anch/.style={circle, draw=none, fill=red, inner sep=0pt, minimum size=3pt},
    label/.style={font=\ttfamily\scriptsize, text=red}
}




%%%%%%%%%%%%%%%%%%%%%%%%%%% 
% SHAPES OF MAIN ELEMENTS %
%%%%%%%%%%%%%%%%%%%%%%%%%%% 
\pgfkeys{/forsyde keys/.is family, /forsyde keys,
  primitive/.style  = {shape=atom shape},
  primitiven/.style = {shape=nary atom shape},
  process/.style    = {hasmoc, shape=leaf shape},
  processn/.style   = {hasmoc, shape=leafn shape},
  composite/.style  = {shape=comp shape},
  compositen/.style = {shape=nary comp shape},
  black box/.style  = {shape=leaf shape, moc=blackbox, inner xsep = 5pt,inner ysep = 5pt,},
  embed/.style      = {hasmoc, shape=leaf shape, inner sep=15pt},
  farmstyle/.style  = {shape = dp shape,inner xsep = 15pt,inner ysep = 20pt,},
  pipestyle/.style  = {shape = pipe shape,inner xsep = 15pt,inner ysep = 20pt,},
  skeleton/.style   = {shape = generic skel shape,inner xsep = 15pt,inner ysep = 20pt,},
  zipx/.style       = {transition={s1}{v1},rotate shape=180,type=zipx,},
  unzipx/.style     = {transition={s1}{v1},type=unzipx},
  transition/.code 2 args = {\edef\theshape{trans shape #1#2}\tikzset{/forsyde keys/shape = \theshape}},
  transition/.default     ={v1}{v1},
}