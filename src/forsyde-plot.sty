% A library with graphical primitives plotting ForSyDe signal 
% graphs
%
% Author: George Ungureanu, KTH - Royal Institute of Technology, Sweden
% Version: 0.1
% Date: 2016/08/13
\NeedsTeXFormat{LaTeX2e}
\RequirePackage{tikz}
\RequirePackage{pgfplots}
\RequirePackage{calc}
\RequirePackage{etoolbox}

\ProvidesPackage{forsyde-plot} [2017/05/20 v0.2 Signal Plot Library]
\usetikzlibrary{forsyde.shapes, forsyde.utils}

%%%%%%%%%%%%%%%%%%%%%%%
% SYNCHRONOUS SIGNALS %
%%%%%%%%%%%%%%%%%%%%%%%

%% \inputSY[*][node keys] [<input port>] {events};
\NewDocumentCommand\inputSY{s O{} D<>{0,0} m}{%
  \node[anchor=south east, xshift=-.5cm, #2] (insig) at (#3) {#4};%
  \IfBooleanTF#1{\path[s,-|-=.9,->] (insig.south west) edge (#3);}{}%
}

% \outputSY[*][node keys] [<input port>] {events};
\NewDocumentCommand\outputSY{s O{} D<>{0,0} m}{%
  \node[anchor=south west, xshift=.5cm, #2] (outsig) at (#3) {#4};%
  \IfBooleanTF#1{\path[s,-|-=.9,<-] (outsig.south east) edge (#3);}{}%
}
 
%%%%%%%%%%%%%%%%%%%%%%%%%%
% DISCRETE EVENT SIGNALS %
%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcounter{signum}
\newif\ifgrid
\newif\iftimestamp
\newif\ifdrawinputs
\newif\ifdrawoutputs
\newif\ifoverlap
\pgfkeys{/signal plot keys/.is family, /signal plot keys,
  show grid/.is if=grid,
  show timestamps/.is if=timestamp,
  draw inputs/.is if=drawinputs,
  draw outputs/.is if=drawoutputs,
  overlap/.is if=overlap,
  label pos/.estore in  = \dePos,
  step/.estore in       = \deGridSize,
  xscale/.estore in     = \xdeScale,
  yscale/.estore in     = \ydeScale,
  xshift/.estore in     = \xdeShift,
  yshift/.estore in     = \ydeShift,
  signal sep/.estore in = \deSep,
  at/.estore in         = \deAt,
  anchor/.estore in     = \deAnchor,
  grid/.style           ={show grid, step = {#1}, },
  timestamps/.style     ={show timestamps, step = {#1}, },
  inputs/.style         ={draw inputs, at={#1}, anchor=east, xshift=-.5cm},
  outputs/.style        ={draw outputs, at={#1}, anchor=west, xshift=.5cm},
  default/.style = {
    label pos=mid, 
    step=5,
    xscale=.5,
    yscale=.5,
    xshift=0pt,
    yshift=0pt,
    signal sep=1,
    at={0,0},
    anchor=mid,
  }
}
  
%% \inputDE[*][node keys] [<position>] {span};
\NewDocumentEnvironment{signalsDE}{O{} m}{%
  \pgfkeys{/signal plot keys, default, #1}%
  \setcounter{signum}{0}
  \def\lastTag{#2}
  \ifdrawinputs\def\deCoordinate{\deAt.west}
  \else\ifdrawoutputs\def\deCoordinate{\deAt.east}
  \else\def\deCoordinate{\deAt}
  \fi\fi
  \node[%
  xshift=\xdeShift, yshift=\ydeShift,
  inner sep=1.5pt, anchor=\deAnchor,
  ] (sigdrawing) at (\deCoordinate) \bgroup
  \begin{tikzpicture}[%
    draw=black,xscale=\xdeScale, yscale=\ydeScale] %
    \tikzstyle{time}=[coordinate]%
  }{%
    \ifgrid
    \pgfmathsetmacro\ymin{-\deSep*\thesignum + 0.5}
    \foreach \x [count=\i] in {0,\deGridSize,...,\lastTag} {
      \draw[black!60, dashed,line width=0.2pt]
      (\x,0.5) -- (\x,\ymin);
    }
    \else
    \fi%
  \end{tikzpicture}%
  \egroup;
  \node[ports e\thesignum w\thesignum, inner sep=0pt,
    fit=(sigdrawing)] (sigplot) {};
  \iftimestamp
  \node[anchor=south west, inner sep=0] at (sigplot.north west) {%
    \begin{tikzpicture}[%
      draw=black, %
      xscale=\xdeScale, yscale=\ydeScale,
      ] %
      \foreach \x [count=\i] in {0,\deGridSize,...,\lastTag} {
        \pgfmathsetmacro\timestamp{(\i-1)*\deGridSize}
        \node[anchor=south] at (\x,0.5) {%
          \textbf{\scriptsize\timestamp}};
      }
    \end{tikzpicture}
  };
  \else\fi
  \ifdrawinputs
  \foreach \i in {1,...,\thesignum} {
    \path (sigplot.e\i) edge[s,-|-,->] (\deAt.w\i);
  }
  \else\fi
  \ifdrawoutputs
  \foreach \i in {1,...,\thesignum} {
    \path (sigplot.w\i) edge[s,-|-,<-] (\deAt.e\i);
  }
  \else\fi
}

\NewDocumentCommand{\signalDE}{>{ \SplitList {,} } m}{%
  \pgfmathsetmacro{\deYPos}{-\thesignum * \deSep}
  \path (0,\deYPos) node[left] {} node[time] (t_cur) {};
  \ProcessList { #1 } {\deDrawEvents}%
  \deLastEvent{}{\lastTag}%
  \firstitemtrue%
  \stepcounter{signum}
}

\newif\iffirstitem
\firstitemtrue   

\NewDocumentCommand{\deDrawEvents}{ > {\SplitArgument{1}{:}} m }{%
  \iffirstitem\firstitemfalse\deFirstEvent #1
  \else\deEvent #1
  \fi
} 

\NewDocumentCommand{\deFirstEvent}{m m} {%
  \def\dePrevValue{#1}%
}
\NewDocumentCommand{\deEvent}{m m} {%
  \draw (t_cur) %
  -- ++( .05, .3) -- (#2-.05,.3+\deYPos) -- ++(.05,-.3) %
  -- ++(-.05,-.3) -- ($(t_cur)+(.05,-.3)$) -- cycle; %
  \path (t_cur)
  -- node[anchor=\dePos] {\scriptsize\dePrevValue}
  (#2,\deYPos) node[time] (t_cur) {};
  \def\dePrevValue{#1}  
}
\NewDocumentCommand{\deLastEvent}{m m} {%
  \draw (t_cur) -- ++( .05, .3) -- (#2,.3+\deYPos);
  \draw (t_cur) -- ++( .05, -.3) -- (#2,-.3+\deYPos);
  \path (t_cur)
  -- node[anchor=\dePos] {\scriptsize\dePrevValue}
  (#2,\deYPos) node[time] (signal-\thesignum) {};
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%
% CONTINUOUS TIME SIGNALS %
%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\Colors}{{%
"E41A1C",%
"377EB8",%
"4DAF4A",%
"984EA3",%
"FF7F00",%
"FFFF33",%
"A65628",%
"F781BF"
}}

\def\ctPlotWidth{4}
%% \inputDE[*][node keys] [<position>] {span};
\NewDocumentEnvironment{signalsCT}{O{} O{0} m}{%
  \pgfkeys{/signal plot keys, default, #1}%
  \setcounter{signum}{0}
  \pgfmathsetmacro{\firstTag}{#2}
  \pgfmathsetmacro{\lastTag}{#3 - #2}
  \ifdrawinputs\def\deCoordinate{\deAt.west}
  \else\ifdrawoutputs\def\deCoordinate{\deAt.east}
  \else\def\deCoordinate{\deAt}
  \fi\fi
  \node[%
  xshift=\xdeShift, yshift=\ydeShift,
  inner sep=1.5pt, anchor=\deAnchor,
  ] (sigdrawing) at (\deCoordinate) \bgroup
  \begin{tikzpicture}[%
    draw=black,xscale=\xdeScale, yscale=\ydeScale] %
    \tikzstyle{time}=[coordinate]%
  }{%
    \ifgrid
    \pgfmathsetmacro\ymin{-\deSep*(\thesignum - 1) * 1.5 - .5}
    \pgfmathsetmacro\gridstep{\ctPlotWidth / \lastTag * \deGridSize }
    \foreach \x [count=\i] in {0,\gridstep,...,\ctPlotWidth} {
      \draw[black!60, dashed,line width=0.2pt]
      (\x,0.5) -- (\x,\ymin);
    }
    \else
    \fi%
  \end{tikzpicture}%
  \egroup;
  \node[ports e\thesignum w\thesignum,inner sep=0pt,
    fit=(sigdrawing)] (sigplot) {};
  \iftimestamp
  \pgfmathsetmacro\gridstep{\ctPlotWidth / \lastTag * \deGridSize }
  \node[anchor=south east, inner sep=0] at (sigplot.north east) {%
    \begin{tikzpicture}[%
      draw=black, %
      xscale=\xdeScale, yscale=\ydeScale,
      ] %
      \foreach \x [count=\i] in {0,\gridstep,...,\ctPlotWidth} {
        \pgfmathsetmacro\timestamp{(\i-1)*\deGridSize}
        \node[anchor=south,gray] at (\x,0.5) {%
          \tiny\pgfmathprintnumber{\timestamp}};
      }
    \end{tikzpicture}
  };
  \else\fi
  \ifdrawinputs
  \foreach \i in {1,...,\thesignum} {
    \path (sigplot.e\i) edge[s,-|-,->] (\deAt.w\i);
  }
  \else\fi
  \ifdrawoutputs
  \foreach \i in {1,...,\thesignum} {
    \path (sigplot.w\i) edge[s,-|-,<-] (\deAt.e\i);
  }
  \else\fi
}


\newif\ifdrawordinate
\newif\ifdrawoutline
\pgfkeys{/ct signal keys/.is family, /ct signal keys,
  draw ordinate/.is if=drawordinate,
  outline/.is if=drawoutline,
  step/.estore in         = \plotSamp,
  ordinate pos/.estore in = \plotOrdPos,
  ordinate/.style  ={draw ordinate, ordinate pos={#1}},
  default/.style = {
    outline=false,
    step=.1,
    ordinate pos=0,
  }
}
\NewDocumentCommand{\signalCT}{O{} m m >{ \SplitList {,} } m}{%
  \pgfkeys{/ct signal keys, default, #1}%
  % determine the Y position
  \ifoverlap\pgfmathsetmacro{\deYPos}{0}
  \else\pgfmathsetmacro{\deYPos}{-\thesignum * \deSep * 1.5}\fi
  % determine the scale
  \pgfmathsetmacro{\plotYMin}{#2}\pgfmathsetmacro{\plotYMax}{#3}
  \pgfmathsetmacro{\plotScale}{1/(\plotYMax - \plotYMin)}
  \pgfmathsetmacro{\plotShift}{(\plotYMax + \plotYMin)/2}
  \pgfmathsetmacro{\plotStep}{\ctPlotWidth / \lastTag * \plotSamp}
  % determine the color
  \pgfmathsetmacro{\thecurrentcolor}{\Colors[\value{signum}]}
  \definecolor{currentcolor}{HTML}{\thecurrentcolor}
  % start plotting
  \pgfmathsetmacro{\deXPos}{0}
  \path (0,\deYPos) node[left] {} node[time] (t_start) {};
  \ProcessList { #4 } {\ctDrawEvents};%
  \ifdrawordinate
    \pgfmathsetmacro{\ordYPos}{(\plotOrdPos - \plotShift) *\plotScale +\deYPos}
    \draw[->,line width=.1pt]%
    (0,\ordYPos) node[left] {\tiny\pgfmathprintnumber{\plotOrdPos}}
    -- (\ctPlotWidth,\ordYPos);
  \else\fi
  \ifdrawoutline
    \draw[ultra thin, gray] (0,\deYPos)
    --++(0,.5) node[left] {\tiny\pgfmathprintnumber{\plotYMax}}
    --++(\ctPlotWidth,0) ++(0,-1)
    --++(-\ctPlotWidth,0) node[left] {\tiny\pgfmathprintnumber{\plotYMin}}
    --++(0,.5);
  \else\fi
  % update state
  \firstitemtrue%
  \stepcounter{signum}
}

\NewDocumentCommand{\ctDrawEvents}{ m }{%
  \pgfmathsetmacro{\plotYPos}{(#1 -\plotShift) * \plotScale + \deYPos}
  \iffirstitem\firstitemfalse%
    \node[time] (t_cur) at (\deXPos,\plotYPos){};
  \else%
    \ifdim\deXPos pt<\ctPlotWidth pt% 
    \draw[color=currentcolor, thin]
    (t_cur) -- (\deXPos,\plotYPos) node[time] (t_cur) {};
    \else\fi
  \fi
  \pgfmathsetmacro{\deXPos}{\deXPos + \plotStep}
} 
